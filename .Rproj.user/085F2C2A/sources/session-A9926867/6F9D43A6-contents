---
title: "Example Analysis"
bibliography: ref.bib
editor: visual
---

Here I will present a very brief analysis of a data about global food prices in a monthly basis starting from 1990 all the way upto 2022. The data which I have used for analysis here is taken from [Kaggle](https://www.kaggle.com/) under the section of food data sets. The name of the data set is [Global Food Prices Year by Year](https://www.kaggle.com/datasets/thedevastator/food-prices-year-by-year). The data here gives the value of food price index for every month of the years specified. The data also provides prices of various raw materials like meat, cereals, oil etc. With increasing prices of food over the years, this data has become interesting because analyzing this data might help us to find some reasons which are causing this rise of food prices. 

::: {.callout-important}
![Heatmap for monthly food price index from 1990 to 2022](photo.png)
:::


The above figure used in the analysis of this data in the analysis named [Food Price Change Anlaysis](https://www.kaggle.com/code/fethullahceviz/food-price-change-anlaysis) done by *Fethullah Ceviz* is really interesting because we can see a clear temporal pattern in the food price index over the varying years. This heatmap was the reason why i chose to analyse this data set.

With Increase in prices of food, it can very well happen that this can lead to a food crisis because people might not be able to afford enough food for them to sustain. There are several literatures suggesting that there are very adverse effects of rise in food price index (see [@AREZKI2014142], [@index2021world]). Not only from the public health or economic point of view, but also from the social point of view, increasing food price index is posing major threats (see [@bellemare2015rising]). So researchers and policy makers are the people who should go through these type of data sets in order to see what is the main reason for this price hike an make interventions to keep the prices in control. So this brief analysis can be of importance to policy makers and people from agriculture and food production departments of different states.

The following note provides a short dictionary for the data that we have used. One thing to mention here is that the data description in the website has not said anything about the units of each variable by which they are presented, and so for the entire analysis, I have assumed that they are on the same scale. This is a simplifying assumption, which helps in making some plots.

::: callout-note
Data dictionary for [Global Food Prices Year by Year](https://www.kaggle.com/datasets/thedevastator/food-prices-year-by-year)

`index` : a variable indexing every month of each year

`date` : Monthly first date of every year

`food price index` : This is the representative of the food price for a particular month of the year

`meat` : price of meat (monthly)

`dairy` : price of dairy (monthly)

`cereals` : price of cereals (monthly)

`oil` : price of oil (monthly)

`sugar` : price of sugar (monthly)
:::

## R Libraries

I have used the following libraries for the entire analysis:

```{r,message=FALSE,warning=FALSE}
library(dplyr)
library(readr)
library(stringr)
library(lubridate)
library(reshape2)
library(ggplot2)
library(quarto)
```

## Data Cleaning

At first, we cleaned the `.csv` file provided in the website in a suitable way so that we can use it properly. The raw data was provided in a character string format. The main goal for this section was to convert it to a data frame.

```{r, message=FALSE,warning=FALSE}
data = read_csv("food_price_data.csv")
head(data) # raw data
data_modified = t(data.frame(apply(data, 1, 
                                   function(x)
                                     {strsplit(x, split = " ")}))) 
                                         # spliting strings
data_modified = as_tibble(data_modified) # converting to data.frame
colnames(data_modified) = c("index",
                            "date",
                            "food price index",
                            "meat",
                            "dairy",
                            "cereals",
                            "oils",
                            "sugar")

data_modified[,-2] = apply(data_modified[ , -2], 2,
                           function(x) as.numeric(as.character(x)))
data_modified[,2] = mdy(sapply(data_modified[,2], 
                               function(x){strsplit(x,split = "/")}))

head(data_modified) # modified data
```

## Brief exploratory analysis

Our main aim here is to see which of the variables provided in the dataset seems to be associated with the monthly food price index. In order to see that we have computed pairwise correlation heatmap for all the variables including the food price index (FPI). The following heatmap shows the result:

```{r,message=FALSE,warning=FALSE}
cormat = round(cor(data_modified[,-c(1,2)]),2)
melted_cormat = melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 1))) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1,vjust = 1)) +
  labs(title = "Correlation heatmap for all the variables from 1990-2022",
       subtitle = "There is strong correlation of some variables with FPI",
         caption = "Anik Burman (PhD 1st year, Biostatistics, Bloomberg School of Public Health)") 
```

So, here we see that there is strong associations of some variables like *dairy* and *meat* with FPI. But here we are not taking into consideration the temporal pattern that is present in the variables. So in order to see the temporal structure out of the variables, we have plotted the yearly average values of the variables over time. The following time series plot shows the trend of all the variables including FPI from 1990 to 2022.

```{r,message=FALSE,warning=FALSE}
year = as.numeric(format(data_modified$date,"%Y")) 
# introducing variable "year" which is the year for every date

data_modified = data_modified %>% mutate(year = year)

average_data = data_modified %>% 
  group_by(year) %>% 
  select(`food price index`,meat,dairy,cereals,oils,sugar) %>% 
  summarise(across(everything(), mean))

ggplot(average_data,aes(x = year))+
  geom_line(aes(y = `food price index` , color="fpi")) +
  geom_line(aes(y = meat , color="meat")) +
  geom_line(aes(y = dairy , color="dairy")) +
  geom_line(aes(y = cereals , color="cereals")) +
  geom_line(aes(y = oils , color="oil")) +
  geom_line(aes(y = sugar , color="sugar")) +
  labs(color="name of items") +
  xlab("year") +
  ylab("price") +
  geom_vline(xintercept = c(2000,2011,2016),linetype = "dashed", colour = "black") +
  labs(title = "Trend of variables from 1990-2022",
       subtitle = "We see similar trends for all the variables",
         caption = "Anik Burman (PhD 1st year, Biostatistics, Bloomberg School of Public Health)") 
```


So we see here that the trends for all the variables are similar in nature and this explains why on an average over the years from 1990-2022, the correlation between FPI and the other variables have remained high and with positive sign. But when we see the trends, we observe that not every period of time from 1990-2022 showed an upward trend, and there are regions where the trend was declining, somewhere it was going up and somewhere it was nearly constant. So we wanted to see how the variables are associated with FPI for each of these parts of our timeline. So we partitioned the entire time-span of 1990-20222 in four regions (demarcated by black vertical dotted lines). The parts are `<2000`, `2000-2011`, `2011-2016` and `>2016` respectively.

## Introduction of new variables

So to incorporate the temopral pattern of the variables in our analysis, we introduced a new categorial variable which denotes from which segment of time among `<2000`, `2000-2011`, `2011-2016` and `>2016`, does the observation belong to.

```{r,message=FALSE,warning=FALSE}
data_modified = data_modified %>% 
  mutate(year = year, 
         decade = ifelse(year <= 2000,"<2000",
                         ifelse(year >2000 & year<= 2011, 
                                "2000-2011",
                                ifelse(year >2011 & year<=2016,
                                       "2011-2016",
                                       ">2016"))))

decade_name = c("<2000","2000-2011","2011-2016",">2016")
```

With this new variables introduced, we now compute the pairwise correlations for each segment of the timeline and see how the correlations turn out to be.

```{r,message=FALSE,warning=FALSE}
melted_cormat = NULL
for(i in 1:4)
{
  dt_cor = data_modified %>% filter(decade == decade_name[i])
  cormat <- round(cor(dt_cor[,-c(1,2,9,10)]),2)
  melted = melt(cormat)
  melted_cormat = rbind(melted_cormat ,
                        cbind(melted,rep(decade_name[i],nrow(melted))))
  head(melted_cormat)
}
  
melted_cormat[,4] = as.factor(melted_cormat[,4])
colnames(melted_cormat)[4] = "decade"
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
  geom_tile() +
  facet_wrap(~decade,ncol = 2) +
  geom_text(aes(label = round(value, 1)), size = 2) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1,vjust = 1)) +
  labs(title = "Correlation heatmap for individual time-parts from 1990-2022",
       subtitle = "We see different correlaations for different time-parts",
         caption = "Anik Burman (PhD 1st year, Biostatistics, Bloomberg School of Public Health)") 
```

Now, here have something interesting. What we observe that, for the time-periods `2000-2011` and for `>2016`, the correlation of FPI with the other variables is the higher as compared to the other variables. And if we look into the trend plot above carefully, then we can see that these are essentially those time-points when FPI was on a rise. So we can somehow have some evidence that the variables converned have some association with FPI. 

We also did some exploratory analysis of the variables, where we looked at how the variables are distributed for each of the time-segments including FPI. The following box-plots show the distribution of all the variables for different time points.

```{r,message=FALSE,warning=FALSE}
data_long = melt(data = data_modified[,-c(1,2,9)], id = "decade")

ggplot(data_long, aes(x = variable, y = value, color = decade)) +  # ggplot function
  geom_boxplot() +
  theme(legend.position = "bottom")


```

```{r}
#| fig-cap: "Median values of the variables"
#| column: margin
sum_table = data_modified[-c(1,2,9)] %>% group_by(decade) %>% summarise(across(everything(), median))

sum_melt = melt(data = sum_table, id = "decade")

knitr::kable(sum_table)
```

Here we see that although the distribution of FPI have remained similar over various time-segments, the distribution of the variables have changed over time. By change in distribution we do not mean the absolute values, which will increase over time as we have observed a increasing trend for all the variables over the years. But what we have observed is that, there has been a change in the characteristics of the distribution for some variables, when we have moved from one time-segment to the other. This is a bit counter-intuitive due to the fact that, although the explanatory variables like oil or dairy have changed their distribution over time, the distribution of FPI (except for the time-segment of 2000-2011) have remained similar.

## Summary 
 
At the end, we can say that the introduction of the time-partioning variable has been interesting. This helped in explaining the temporal pattern in association between FPI and the other variables. We saw that in the time-period 2000-2011 and >2016, the variables were very highly correlated with FPI which was not the case for the other two time periods. But in general we saw an overall association of the variables with our variable of interest which is monthly Food Price Index or FPI. So we can say that if we can control the prices of the explanatory variables, then we can expect to gain control over FPI which is the main target of our analysis.
 
## Functions Used

I have used the following functions from `dplyr`, `tidyr` and `ggplot2` packages:

Dplyr:

1. group_by()
2. select()
3. Summarise()
4. mutate()
5. filter()

GGplot2:

1. geom_tile()
2. geom_boxplot()
3. geom_line()

## References 



